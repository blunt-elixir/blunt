"Represents a schema"
schema {
  query: RootQueryType
}

type PageInfo {
  "When paginating backwards, are there more items?"
  hasPreviousPage: Boolean!

  "When paginating forwards, are there more items?"
  hasNextPage: Boolean!

  "When paginating backwards, the cursor to continue."
  startCursor: String

  "When paginating forwards, the cursor to continue."
  endCursor: String
}

type PersonEdge {
  node: Person
  cursor: String
}

type PersonConnection {
  pageInfo: PageInfo!
  edges: [PersonEdge]
  totalCount: Int
}

type Person {
  id: ID
  name: String
  gender: Gender
}

type RootQueryType {
  listPeople(after: String, first: Int, before: String, last: Int, gender: Gender, name: String): PersonConnection
}

enum Gender {
  MALE
  FEMALE
  NOT_SURE
}
